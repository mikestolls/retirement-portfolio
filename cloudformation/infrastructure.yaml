AWSTemplateFormatVersion: '2010-09-09'
Description: 'Retirement Portfolio Infrastructure (DynamoDB, S3, CloudFront)'

Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues: [dev, staging, prod]

Resources:
  # DynamoDB Tables (matching your Lambda code)
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  FamilyInfoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: family_info
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: family_info_id
          AttributeType: S
      KeySchema:
        - AttributeName: family_info_id
          KeyType: HASH

  RetirementFundTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: retirement_funds
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: retirement_fund_info_id
          AttributeType: S
      KeySchema:
        - AttributeName: retirement_fund_info_id
          KeyType: HASH

  # S3 Bucket for Frontend
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-frontend-${AWS::AccountId}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # CloudFront Distribution
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub ${AWS::StackName}-oac
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !Ref CloudFrontOriginAccessControl
          - Id: APIGatewayOrigin
            DomainName: placeholder-api-gateway.execute-api.us-east-1.amazonaws.com
            CustomOriginConfig:
              HTTPPort: 443
              OriginProtocolPolicy: https-only
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
        CacheBehaviors:
          - PathPattern: /api/*
            TargetOriginId: APIGatewayOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        PriceClass: PriceClass_100

  # S3 Bucket Policy for CloudFront
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CloudFrontDistribution
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${FrontendBucket}/*"
            Condition:
              StringEquals:
                "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"



Outputs:
  FrontendURL:
    Description: Frontend URL
    Value: !Sub https://${CloudFrontDistribution.DomainName}
    Export:
      Name: !Sub ${AWS::StackName}-frontend-url

  S3BucketName:
    Description: S3 Bucket for Frontend
    Value: !Ref FrontendBucket
    Export:
      Name: !Sub ${AWS::StackName}-s3-bucket

  CloudFrontDistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub ${AWS::StackName}-cloudfront-id

  UsersTableName:
    Description: Users DynamoDB Table
    Value: !Ref UsersTable
    Export:
      Name: !Sub ${AWS::StackName}-users-table

  FamilyInfoTableName:
    Description: Family Info DynamoDB Table
    Value: !Ref FamilyInfoTable
    Export:
      Name: !Sub ${AWS::StackName}-family-info-table

  RetirementFundTableName:
    Description: Retirement Fund DynamoDB Table
    Value: !Ref RetirementFundTable
    Export:
      Name: !Sub ${AWS::StackName}-retirement-fund-table