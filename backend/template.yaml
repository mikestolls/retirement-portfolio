AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.9
    Timeout: 30
    Environment:
      Variables:
        DYNAMODB_ENDPOINT_URL: !If [IsLocal, "http://localhost:8000", !Ref "AWS::NoValue"]
        AWS_DEFAULT_REGION: !Ref "AWS::Region"
        USERS_TABLE: !Ref UsersTable
        FAMILY_INFO_TABLE: !Ref FamilyInfoTable
        RETIREMENT_FUND_TABLE: !Ref RetirementFundTable
    Layers:
      - !Ref SharedLayer

Conditions:
  IsLocal: !Equals [!Ref "AWS::StackName", "local"]

Resources:
  # Shared Layer
  SharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: retirement-portfolio-shared
      Description: Shared code for retirement portfolio functions
      ContentUri: layers/shared/
      CompatibleRuntimes:
        - python3.9

  # Lambda Functions
  OptionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/options/
      Handler: handler.lambda_handler
      Events:
        OptionsApi:
          Type: Api
          Properties:
            Path: /api/{proxy+}
            Method: options

  HealthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/health/
      Handler: handler.lambda_handler
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/health
            Method: get
            Cors:
              AllowMethods: "'GET,POST,OPTIONS'"
              AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              AllowOrigin: "'*'"

  GetFamilyInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-family-info/
      Handler: handler.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable
        - DynamoDBReadPolicy:
            TableName: !Ref FamilyInfoTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/get_family_info/{user_id}
            Method: get
            Cors:
              AllowMethods: "'GET,POST,OPTIONS'"
              AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              AllowOrigin: "'*'"

  UpdateFamilyInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/update-family-info/
      Handler: handler.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref FamilyInfoTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/update_family_info/{user_id}
            Method: post
            Cors:
              AllowMethods: "'GET,POST,OPTIONS'"
              AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              AllowOrigin: "'*'"

  GetRetirementDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-retirement-data/
      Handler: handler.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable
        - DynamoDBReadPolicy:
            TableName: !Ref FamilyInfoTable
        - DynamoDBReadPolicy:
            TableName: !Ref RetirementFundTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/get_retirement_fund_data/{user_id}
            Method: get
            Cors:
              AllowMethods: "'GET,POST,OPTIONS'"
              AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              AllowOrigin: "'*'"

  UpdateRetirementDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/update-retirement-data/
      Handler: handler.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref RetirementFundTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/update_retirement_fund_data/{user_id}
            Method: post
            Cors:
              AllowMethods: "'GET,POST,OPTIONS'"
              AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              AllowOrigin: "'*'"

  # DynamoDB Tables
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  FamilyInfoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: family_info
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: family_info_id
          AttributeType: S
      KeySchema:
        - AttributeName: family_info_id
          KeyType: HASH

  RetirementFundTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: retirement_funds
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: retirement_fund_info_id
          AttributeType: S
      KeySchema:
        - AttributeName: retirement_fund_info_id
          KeyType: HASH

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"